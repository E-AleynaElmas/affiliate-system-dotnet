version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: affiliate-sqlserver
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Password123
      - MSSQL_PID=Developer
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - affiliate-network
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrong@Password123", "-Q", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: affiliate-api
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=AffiliateSystemDb;User Id=sa;Password=YourStrong@Password123;TrustServerCertificate=true;MultipleActiveResultSets=true
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - affiliate-network
    volumes:
      - ./logs:/app/logs

  # Redis Cache (Optional - for production)
  redis:
    image: redis:alpine
    container_name: affiliate-redis
    ports:
      - "6379:6379"
    networks:
      - affiliate-network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

networks:
  affiliate-network:
    driver: bridge

volumes:
  sqlserver-data:
  redis-data: